package com.TrendZ.Ecomm.Controller;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.TrendZ.Ecomm.Exception.OrderException;
import com.TrendZ.Ecomm.Repository.OrderRepository;
import com.TrendZ.Ecomm.Service.OrderService;
import com.TrendZ.Ecomm.Service.UserService;
import com.TrendZ.Ecomm.model.Order;
import com.TrendZ.Ecomm.model.PaymentLinkResponse;
import com.razorpay.RazorpayClient;

@RestController
@RequestMapping("/api")
public class PaymentController {
	@Value("{razorpay.api.key}")
	String apiKey;

	@Value("{razorpay.api.secret}")
	String apiSecret;
	
	@Autowired
	private OrderService orderService;
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private OrderRepository orderRepository;
	
	@PostMapping("/payment/{orderId}")
	public ResponseEntity<PaymentLinkResponse> createPaymentLink(@PathVariable Long orderId,@RequestHeader("Authorization") String jwt) throws OrderException{
		Order order = orderService.findOrderById(orderId); 
		
		try {
			RazorpayClient razorpay=new RazorpayClient(apiKey, apiSecret);
			
			JSONObject paymentLinkRequest=new JSONObject();
			
			paymentLinkRequest.put("amount", order.getTotalPrice()/100);
			paymentLinkRequest.put("currency", "INR");
			
			
			JSONObject customer = new JSONObject();
			customer.put("name", order.getUser().getFirstName());
			customer.put("email", order.getUser().getEmail());
			
			JSONObject notify=new JSONObject();
			notify.put("sms", true);
			notify.put("email", true);
			
			paymentLinkRequest.put("notify", notify);
			paymentLinkRequest.put("customer", customer);
			
			paymentLinkRequest.put("callback_url", "http://localhost:3000/payment/"+order.getOrderId());
			
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
}
